{"ast":null,"code":"var _jsxFileName = \"/home/dimetrio/projects/react-chat-app/src/components/AddMessage.js\";\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst AddMessage = props => {\n  let input;\n  return React.createElement(\"section\", {\n    id: \"new-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        props.dispatch(input.value, 'Me');\n        input.value = '';\n      }\n    },\n    type: \"text\",\n    ref: node => {\n      input = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nAddMessage.propTypes = {\n  dispatch: propTypes.func.isRequired\n};\nexport default AddMessage;","map":{"version":3,"sources":["/home/dimetrio/projects/react-chat-app/src/components/AddMessage.js"],"names":["React","propTypes","AddMessage","props","input","e","key","dispatch","value","node","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,MAAIC,KAAJ;AAEA,SACI;AAAS,IAAA,EAAE,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACC,IAAA,UAAU,EAAGC,CAAD,IAAO;AACf,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAsB;AAClBH,QAAAA,KAAK,CAACI,QAAN,CAAeH,KAAK,CAACI,KAArB,EAA4B,IAA5B;AACAJ,QAAAA,KAAK,CAACI,KAAN,GAAc,EAAd;AACH;AACJ,KANF;AAOC,IAAA,IAAI,EAAC,MAPN;AAQC,IAAA,GAAG,EAAGC,IAAD,IAAS;AACVL,MAAAA,KAAK,GAAGK,IAAR;AACH,KAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADJ;AAgBH,CAnBD;;AAoBAP,UAAU,CAACD,SAAX,GAAuB;AACnBM,EAAAA,QAAQ,EAAEN,SAAS,CAACS,IAAV,CAAeC;AADN,CAAvB;AAGA,eAAeT,UAAf","sourcesContent":["import React from 'react'\nimport propTypes from 'prop-types'\n\nconst AddMessage = (props) => {\n    let input\n\n    return(\n        <section id=\"new-message\">\n           <input \n            onKeyPress={(e) => {\n                if (e.key === 'Enter'){\n                    props.dispatch(input.value, 'Me')\n                    input.value = ''\n                }\n            }}\n            type=\"text\"\n            ref={(node) =>{\n                input = node\n            }}\n           ></input>\n        </section>\n    )\n}\nAddMessage.propTypes = {\n    dispatch: propTypes.func.isRequired\n}\nexport default AddMessage"]},"metadata":{},"sourceType":"module"}