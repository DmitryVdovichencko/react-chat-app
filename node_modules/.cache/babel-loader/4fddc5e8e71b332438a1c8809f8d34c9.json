{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nimport { addUser, messageRecieved, populateUsersList } from '../actions';\n\nconst setupSocket = (dispatch, username) => {\n  const socket = new WebSocket('ws://localhost:8989');\n\n  socket.onopen = () => {\n    socket.send(JSON.stringify({\n      type: types.ADD_USER,\n      name: username\n    }));\n  };\n\n  socket.onmessage = event => {\n    const data = JSON.parse(event.data);\n\n    switch (data.type) {\n      case types.ADD_MESSAGE:\n        dispatch(messageRecieved(data.message, data.author));\n        break;\n\n      case types.ADD_USER:\n        dispatch(addUser(data.name));\n        break;\n\n      case types.USERS_LIST:\n        dispatch(populateUsersList(data.users));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return socket;\n};\n\nexport default setupSocket;","map":{"version":3,"sources":["/home/dimetrio/projects/react-chat-app/src/sockets/index.js"],"names":["types","addUser","messageRecieved","populateUsersList","setupSocket","dispatch","username","socket","WebSocket","onopen","send","JSON","stringify","type","ADD_USER","name","onmessage","event","data","parse","ADD_MESSAGE","message","author","USERS_LIST","users"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,SAAQC,OAAR,EAAiBC,eAAjB,EAAkCC,iBAAlC,QAA0D,YAA1D;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxC,QAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AAClBF,IAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AACvBC,MAAAA,IAAI,EAACb,KAAK,CAACc,QADY;AAEvBC,MAAAA,IAAI,EAAET;AAFiB,KAAf,CAAZ;AAIH,GALD;;AAMAC,EAAAA,MAAM,CAACS,SAAP,GAAoBC,KAAD,IAAW;AAC1B,UAAMC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWF,KAAK,CAACC,IAAjB,CAAb;;AACA,YAAQA,IAAI,CAACL,IAAb;AACI,WAAKb,KAAK,CAACoB,WAAX;AACIf,QAAAA,QAAQ,CAACH,eAAe,CAACgB,IAAI,CAACG,OAAN,EAAeH,IAAI,CAACI,MAApB,CAAhB,CAAR;AACA;;AACA,WAAKtB,KAAK,CAACc,QAAX;AACIT,QAAAA,QAAQ,CAACJ,OAAO,CAACiB,IAAI,CAACH,IAAN,CAAR,CAAR;AACJ;;AACA,WAAKf,KAAK,CAACuB,UAAX;AACIlB,QAAAA,QAAQ,CAACF,iBAAiB,CAACe,IAAI,CAACM,KAAN,CAAlB,CAAR;AACJ;;AACA;AACI;AAXZ;AAaH,GAfD;;AAgBA,SAAOjB,MAAP;AACH,CA1BD;;AA2BA,eAAeH,WAAf","sourcesContent":["import * as types from '../constants/ActionTypes'\nimport {addUser, messageRecieved, populateUsersList} from '../actions'\n\nconst setupSocket = (dispatch, username) => {\n    const socket = new WebSocket('ws://localhost:8989')\n\n    socket.onopen = () => {\n        socket.send(JSON.stringify({\n            type:types.ADD_USER,\n            name: username\n        }))\n    }\n    socket.onmessage = (event) => {\n        const data = JSON.parse(event.data)\n        switch (data.type){\n            case types.ADD_MESSAGE:\n                dispatch(messageRecieved(data.message, data.author))\n                break\n                case types.ADD_USER:\n                    dispatch(addUser(data.name))\n                break\n                case types.USERS_LIST:\n                    dispatch(populateUsersList(data.users))\n                break\n                default:\n                    break\n        }\n    }\n    return socket\n}\nexport default setupSocket"]},"metadata":{},"sourceType":"module"}